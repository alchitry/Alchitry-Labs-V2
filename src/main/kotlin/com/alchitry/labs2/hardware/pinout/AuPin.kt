package com.alchitry.labs2.hardware.pinout

import com.alchitry.labs2.parsers.acf.types.Artix7IoStandard

enum class AuPin(override val fpgaPin: String, override val bank: Int) : Pin {
    A2("T8", 14),
    A3("T7", 14),
    A5("T5", 14),
    A6("R5", 14),
    A8("R8", 14),
    A9("P8", 14),
    A11("L2", 35),
    A12("L3", 35),
    A14("J1", 35),
    A15("K1", 35),
    A17("H1", 35),
    A18("H2", 35),
    A20("G1", 35),
    A21("G2", 35),
    A23("K5", 35),
    A24("E6", 35),
    A27("M6", 14),
    A28("N6", 14),
    A30("H5", 35),
    A31("H4", 35),
    A33("J3", 35),
    A34("H3", 35),
    A36("J5", 35),
    A37("J4", 35),
    A39("K3", 35),
    A40("K2", 35),
    A42("N9", 14),
    A43("P9", 14),
    A45("R7", 14),
    A46("R6", 14),
    A48("T9", 14),
    A49("T10", 14),
    B2("D1", 35),
    B3("E2", 35),
    B5("A2", 35),
    B6("B2", 35),
    B8("E1", 35),
    B9("F2", 35),
    B11("F3", 35),
    B12("F4", 35),
    B14("A3", 35),
    B15("B4", 35),
    B17("A4", 35),
    B18("A5", 35),
    B20("B5", 35),
    B21("B6", 35),
    B23("A7", 35),
    B24("B7", 35),
    B27("C7", 35),
    B28("C6", 35),
    B30("D6", 35),
    B31("D5", 35),
    B33("F5", 35),
    B34("E5", 35),
    B36("G5", 35),
    B37("G4", 35),
    B39("D4", 35),
    B40("C4", 35),
    B42("E3", 35),
    B43("D3", 35),
    B45("C3", 35),
    B46("C2", 35),
    B48("C1", 35),
    B49("B1", 35),
    C2("T13", 14),
    C3("R13", 14),
    C5("T12", 14),
    C6("R12", 14),
    C8("R11", 14),
    C9("R10", 14),
    C11("N2", 34),
    C12("N3", 34),
    C14("P3", 34),
    C15("P4", 34),
    C17("M4", 34),
    C18("L4", 34),
    C20("N4", 34),
    C21("M5", 34),
    C23("L5", 34),
    C24("P5", 34),
    C27("T4", 34),
    C28("T3", 34),
    C30("R3", 34),
    C31("T2", 34),
    C33("R2", 34),
    C34("R1", 34),
    C36("N1", 34),
    C37("P1", 34),
    C39("M2", 34),
    C40("M1", 34),
    C42("N13", 14),
    C43("P13", 14),
    C45("N11", 14),
    C46("N12", 14),
    C48("P10", 14),
    C49("P11", 14),
    D8("R16", 14),
    D9("R15", 14),
    D11("P14", 14),
    D12("M15", 14),
    D42("T14", 14),
    D43("T15", 14),
    LED0("K13", 14),
    LED1("K12", 14),
    LED2("L14", 14),
    LED3("L13", 14),
    LED4("M16", 14),
    LED5("M14", 14),
    LED6("M12", 14),
    LED7("N16", 14),
    RESET("P6", 14),
    CLOCK("N14", 14),
    VP("H8", 0),
    VN("J7", 0),
    USB_RX("P15", 14),
    USB_TX("P16", 14),
    SPI_D0("J13", 14),
    SPI_D1("J14", 14),
    SPI_D2("K15", 14),
    SPI_D3("K16", 14),
    SPI_SCK("E8", 14),
    SPI_SS("L12", 14),
    DDR_DQ0("A13", 15),
    DDR_DQ1("B16", 15),
    DDR_DQ2("B14", 15),
    DDR_DQ3("C11", 15),
    DDR_DQ4("C13", 15),
    DDR_DQ5("C16", 15),
    DDR_DQ6("C12", 15),
    DDR_DQ7("C14", 15),
    DDR_DQ8("D8", 15),
    DDR_DQ9("B11", 15),
    DDR_DQ10("C8", 15),
    DDR_DQ11("B10", 15),
    DDR_DQ12("A12", 15),
    DDR_DQ13("A8", 15),
    DDR_DQ14("B12", 15),
    DDR_DQ15("A9", 15),
    DDR_DQS0_P("B15", 15),
    DDR_DQS0_N("A15", 15),
    DDR_DQS1_P("B9", 15),
    DDR_DQS1_N("A10", 15),
    DDR_DM0("A14", 15),
    DDR_DM1("C9", 15),
    DDR_ODT("G11", 15),
    DDR_RESET("D13", 15),
    DDR_BA0("E13", 15),
    DDR_BA1("F15", 15),
    DDR_BA2("E15", 15),
    DDR_CK_P("G14", 15),
    DDR_CK_N("F14", 15),
    DDR_CKE("D15", 15),
    DDR_CS("D16", 15),
    DDR_RAS("D11", 15),
    DDR_CAS("D14", 15),
    DDR_WE("E11", 15),
    DDR_A0("F12", 15),
    DDR_A1("G16", 15),
    DDR_A2("G15", 15),
    DDR_A3("E16", 15),
    DDR_A4("H11", 15),
    DDR_A5("G12", 15),
    DDR_A6("H16", 15),
    DDR_A7("H12", 15),
    DDR_A8("J16", 15),
    DDR_A9("H13", 15),
    DDR_A10("E12", 15),
    DDR_A11("H14", 15),
    DDR_A12("F13", 15),
    DDR_A13("J15", 15);

    companion object : PinConverter {
        override val boardSide = BoardSide.TOP
        override val version = ConverterVersion.V1
        override val standards = Artix7IoStandard.entries
        override fun acfToPin(name: String): AuPin? = entries.firstOrNull { it.name == name }

        override fun bankToVcco(bank: Int): List<String> = when (bank) {
            0 -> emptyList()
            15 -> listOf("1.35")
            14, 35 -> listOf("3.3")
            34 -> listOf("3.3", "1.8")
            else -> error("Unknown bank: $bank")
        }
    }
}